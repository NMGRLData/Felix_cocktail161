do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 624.242112
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 624.0
Run total estimated duration= 625.000
run duration: 0:10:25
doing event level: 2
15:12:49 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4911940336
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
adding queue conditionals from /Users/obama/PychronDev/queue_conditionals/normal.yaml
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run c-02-F-653
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run c-02-F-653
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
queue conditionals path /Users/obama/PychronDev/queue_conditionals/normal.yaml
loading conditionals from /Users/obama/PychronDev/queue_conditionals/normal.yaml
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
15:12:50 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),0.0014152025002068,H2,0.294628732459303,H1,-0.15213669844763,AX,-0.246133618701808,L1,-0....
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1, signals=0.00142,0.29463,-0.15214,-0.24613,-0.61714
15:12:50 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:12:50 -- ******* Pre Extraction Check Passed *******
=================================================================================
15:12:50 -- stopping status monitor
stop 4917337744
Alive clients [4881760624]
15:12:50 -- starting status monitor
start 4917337744
Monitor already running
start extraction
no extraction script
15:12:50 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 398.19611792712
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4943 3.5660 3.6403 3.7173 3.8130 3.7990
Ar39     3.4252 3.4955 3.5683 3.6466 3.7376 3.7239
Ar36     3.2151 3.2814 3.3497 3.4215 3.5182 3.4955
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 397.748580845999
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=c-02-F analysis type=cocktail
Measurement Started felix_analysis400_120.py
15:12:50 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from not run to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.96484
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
flush and close file /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
testing...
no interpolation path defined
executed 639.842112
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
 - No isotope= "Ar40". Required for age calculation
 - failed assembling isotopes
 - ca37 is zero. can't calculated k/ca
 - cl38 is zero. can't calculated k/cl
create graphs
Get Checksum: 1436979209
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
setting previous blanks
 - setting Ar40 blank 0.578+/-0.020
 - setting Ar36 blank 0.00215+/-0.00022
 - setting Ar37 blank 0.020+/-0.011
 - setting Ar38 blank -0.010+/-0.012
 - setting Ar39 blank 0.029+/-0.023
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.58795459e-01]
H2 map mass to dac 39.9624 >> 3.49425
GetHighVoltage ===>> 9000
positioning Ar40 (3.49425) on H2
setting magnet DAC
current  : 3.494246
requested: 3.494250
Delta Dac: 0.000004
Checking detector protection. dv=0.00000
SetMagnetDAC 3.49425 ===>> OK
Magnet settling time: 0.500
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 15.0}
Equilibration Started
15:12:52 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetValveState V ===>> False
change switch state (False, False)
waiting 3s before opening inlet value ('H',)
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: -1031379598
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetValveState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=2
15:12:55 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 15.0sec
sniff (15.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) '' table H2
add group /sniff/Ar39 (Group) '' table H1
add group /sniff/Ar38 (Group) '' table AX
add group /sniff/Ar37 (Group) '' table L1
add group /sniff/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
measuring sniff. ncounts=15.0
starting measurement
GetData ===>> L2(CDD),0.00220142632137721,H2,0.324009891809343,H1,-0.210503507750822,AX,-0.0796642202298356,L1,...
GetData ===>> L2(CDD),0.957888723042117,H2,235.158096790291,H1,7.73786556668222,AX,0.222393039451628,L1,0.60788...
Get Checksum: 611599700
GetData ===>> L2(CDD),1.81594716375919,H2,786.934504339891,H1,24.9342353774729,AX,0.862485042342878,L1,3.028779...
GetData ===>> L2(CDD),1.60436529543329,H2,802.953319956626,H1,24.9487933954184,AX,1.0817208546204,L1,3.11722623...
Get Checksum: 611599700
GetData ===>> L2(CDD),1.36982886540771,H2,693.207808021755,H1,21.2938470672482,AX,0.741065468142778,L1,2.274128...
GetData ===>> L2(CDD),1.17793104715554,H2,597.568113131522,H1,18.412874973195,AX,0.733835863096438,L1,2.2178710...
GetData ===>> L2(CDD),1.06138107661672,H2,526.584648452067,H1,16.464571274832,AX,0.758852822760763,L1,1.6598259...
Get Checksum: 611599700
GetData ===>> L2(CDD),0.962764444301193,H2,477.566723272369,H1,14.9815293284175,AX,0.450661667663139,L1,1.54265...
GetData ===>> L2(CDD),0.911176460024438,H2,443.449350749083,H1,13.8929910887317,AX,0.529363803050469,L1,1.37235...
GetData ===>> L2(CDD),0.871699505634107,H2,421.291179163177,H1,12.9601650588432,AX,0.468558381041887,L1,1.44514...
Get Checksum: 611599700
GetData ===>> L2(CDD),0.861161896471384,H2,405.592002918879,H1,12.5658441760037,AX,0.33262052792722,L1,1.322915...
GetData ===>> L2(CDD),0.804699643510577,H2,395.369736368982,H1,12.345099037925,AX,0.26414265301497,L1,1.0469804...
GetData ===>> L2(CDD),0.82137086894179,H2,387.793539780091,H1,12.1295130442556,AX,0.487946862675737,L1,1.093984...
Get Checksum: 611599700
GetData ===>> L2(CDD),0.807058775089683,H2,383.416481625558,H1,11.7467218155345,AX,0.350629756345118,L1,1.11742...
Equilibration Finished
15:13:10 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetData ===>> L2(CDD),0.816495314906501,H2,379.780387407385,H1,11.7353872961751,AX,0.415442825170036,L1,1.20959...
GetValveState H ===>> False
change switch state (False, False)
Post Equilibration Started felix_pump_extraction_line.py
15:13:10 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Pump Bone
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetValveState H ===>> False
change switch state (False, False)
---------------------------------------- close None (Felix Inlet) result=[(False, False)]
locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
closing name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close F ===>> OK
GetValveState F ===>> False
change switch state (False, False)
---------------------------------------- close None (CO2 Laser to Bone) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
set states for children of F. state=False
set states for children of H. state=False
handle state [('F', False), ('H', False)]
update switch state F False args=() kw={'refresh': True} ncanvase=2
update switch state H False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
measurement finished
estimated time: 15.729 actual time: :15.828
flush and close file /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /signal/Ar40 (Group) '' table H2
add group /signal/Ar39 (Group) '' table H1
add group /signal/Ar38 (Group) '' table AX
add group /signal/Ar37 (Group) '' table L1
add group /signal/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
measuring signal. ncounts=400
close () {'description': 'CO2 Laser to Roughing'}
closing name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
locked=[True]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-C(Bone to Turbo) software locked
change switch state (True, False)
---------------------------------------- open None (Bone to Turbo) result=[(True, False)], time=0.00 sec
locked=[True]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetValveState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=2
15:13:12 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.15 sec
Get Checksum: 1907117877
starting measurement
GetData ===>> L2(CDD),0.808002428099336,H2,376.608530508944,H1,11.7080924662576,AX,0.252558100693321,L1,1.05668...
locked=[False]
open () {'description': 'Bone to Diode Laser'}
opening name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-B(Bone to Diode Laser) software locked
change switch state (True, False)
---------------------------------------- open None (Bone to Diode Laser) result=[(True, False)], time=0.01 sec
locked=[True]
open () {'description': 'Bone to CO2 Laser'}
opening name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-D(Bone to CO2 Laser) software locked
change switch state (True, False)
---------------------------------------- open None (Bone to CO2 Laser) result=[(True, False)], time=0.00 sec
locked=[True]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
GetData ===>> L2(CDD),0.800925035792085,H2,372.99732073889,H1,11.6640291278125,AX,0.522709437635754,L1,1.201166...
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed 6.0
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed 4.0
felix_pump_extraction_line.py completed successfully
GetData ===>> L2(CDD),0.803441440553736,H2,372.147590003067,H1,11.581343485837,AX,0.3782751510989,L1,0.98369631...
B integrity check failed
Post Equilibration Finished
15:13:15 -- ******* Post Equilibration Finished *******
GetData ===>> L2(CDD),0.796049505937499,H2,371.664368100234,H1,11.9065757677242,AX,0.229160024172744,L1,1.40736...
Get Checksum: 1907117877
%%%%%%%%%%%%%%%%%% Stop fired alive=True
15:13:17 -- stop execution
_cancel
GetData ===>> L2(CDD),0.803284165211131,H2,371.289329799913,H1,11.2764504834092,AX,0.207024132235648,L1,1.11061...
GetData ===>> L2(CDD),0.802183237980905,H2,371.580753900476,H1,11.6258656483712,AX,0.469246722816257,L1,1.18707...
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x12639cd60>
Estimated total time= 15223.0, elapsed time= 36.0, deviation= 15187.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
Post Termination Started
15:13:19 -- ******* Post Termination Started *******
Post Measurement Started felix_pump_ms.py
15:13:19 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed 0
Pumping spectrometer
open () {'name': 'V'}
opening name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetData ===>> L2(CDD),0.793375830723368,H2,371.365714122422,H1,11.5695483460831,AX,0.479457183605559,L1,1.33874...
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=2
15:13:19 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open V () result=[(True, True)], time=0.13 sec
Get Checksum: 435616241
locked=[False]
executed 0
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:13:19 -- ******* Post Measurement Finished *******
----------------- stop -----------------
Post Termination Finished
15:13:19 -- ******* Post Termination Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
measurement finished
estimated time: 419.430 actual time: :8.191
flush and close file /Users/obama/PychronDev/data/isotopes/72/1f4ca9-443a-474e-82f7-53e6a85bc3c2.h5
measurement collection canceled
Cancel run state=canceled do_post_equilibration=True
Post Termination Started
15:13:20 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
15:13:20 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
state changed from failed to canceled
_cancel
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x12639cd60>
Estimated total time= 15223.0, elapsed time= 36.0, deviation= 15187.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
Post Termination Started
15:13:20 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
15:13:20 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
executed 639.842112
----------------- finish -----------------
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
15:13:20 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
state changed from canceled to failed
15:13:20 -- Automated run c-02-F-653 failed duration: 30.758 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/Airs_Cocktails.rem.txt
/Users/obama/PychronDev/experiments/rem/Airs_Cocktails.ex.txt
doing event level: 3
